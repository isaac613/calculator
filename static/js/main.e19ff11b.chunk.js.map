{"version":3,"sources":["components/Button.js","components/Input.js","components/ClearButton.js","App.js","reportWebVitals.js","index.js"],"names":["Button","isOperator","val","isNaN","className","this","props","children","onClick","handleClick","React","Component","Input","ClearButton","handleClear","App","state","previousNumber","operator","addToInput","setState","addZeroToInput","addDecimal","indexOf","clearInput","add","subtract","divide","multiply","handleEqual","input","evaluate","parseInt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e19ff11b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Button.css\";\r\n\r\nclass Button extends React.Component {\r\n  isOperator = (val) => {\r\n    return !isNaN(val) || val === \".\" || val === \"=\";\r\n  };\r\n  render() {\r\n    return (\r\n      <div\r\n        className={`button ${\r\n          this.isOperator(this.props.children) ? \"\" : \"operator\"\r\n        }`}\r\n        onClick={() => this.props.handleClick(this.props.children)}\r\n      >\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport \"./Input.css\";\r\n\r\nclass Input extends React.Component {\r\n  render() {\r\n    return <div className=\"Input\">{this.props.children}</div>;\r\n  }\r\n}\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport \"./ClearButton.css\";\r\n\r\nclass ClearButton extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"clear-btn\" onClick={() => this.props.handleClear()}>\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ClearButton;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Button from \"./components/Button\";\nimport Input from \"./components/Input\";\nimport ClearButton from \"./components/ClearButton\";\nimport { evaluate } from \"mathjs\";\n\nclass App extends React.Component {\n  state = {\n    Input: \"\",\n    previousNumber: \"\",\n    operator: \"\",\n  };\n\n  addToInput = (val) => {\n    this.setState({ Input: this.state.Input + val });\n  };\n\n  addZeroToInput = (val) => {\n    // Will not add zero at the begining of any calculation\n    if (this.state.Input !== \"\") {\n      this.setState({ Input: this.state.Input + val });\n    }\n  };\n\n  addDecimal = (val) => {\n    // This will stop the decimal being added multiple times in a row\n    if (this.state.Input.indexOf(\".\") === -1) {\n      this.setState({ Input: this.state.Input + val });\n    }\n  };\n\n  clearInput = () => {\n    this.setState({ Input: \"\" });\n  };\n\n  add = () => {\n    this.state.previousNumber = this.state.Input;\n    this.setState({ Input: \"\" });\n    this.state.operator = \"plus\";\n  };\n\n  subtract = () => {\n    this.state.previousNumber = this.state.Input;\n    this.setState({ Input: \"\" });\n    this.state.operator = \"subtract\";\n  };\n\n  divide = () => {\n    this.state.previousNumber = this.state.Input;\n    this.setState({ Input: \"\" });\n    this.state.operator = \"divide\";\n  };\n\n  multiply = () => {\n    this.state.previousNumber = this.state.Input;\n    this.setState({ Input: \"\" });\n    this.state.operator = \"multiply\";\n  };\n\n  handleEqual = () => {\n    this.setState({ input: evaluate(this.state.Input) });\n\n    if (this.state.operator == \"plus\") {\n      this.setState({\n        Input: parseInt(this.state.previousNumber) + parseInt(this.state.Input),\n      });\n    } else if (this.state.operator == \"subtract\") {\n      this.setState({\n        Input: parseInt(this.state.previousNumber) - parseInt(this.state.Input),\n      });\n    } else if (this.state.operator == \"divide\") {\n      this.setState({\n        Input: parseInt(this.state.previousNumber) / parseInt(this.state.Input),\n      });\n    } else if (this.state.operator == \"multiply\") {\n      this.setState({\n        Input: parseInt(this.state.previousNumber) * parseInt(this.state.Input),\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"calc-wrapper\">\n          <div className=\"row\">\n            <Input>{this.state.Input}</Input>\n          </div>\n          <div className=\"row\">\n            <Button handleClick={this.addToInput}>7</Button>\n            <Button handleClick={this.addToInput}>8</Button>\n            <Button handleClick={this.addToInput}>9</Button>\n            <Button handleClick={this.divide}>%</Button>\n          </div>\n          <div className=\"row\">\n            <Button handleClick={this.addToInput}>4</Button>\n            <Button handleClick={this.addToInput}>5</Button>\n            <Button handleClick={this.addToInput}>6</Button>\n            <Button handleClick={this.multiply}>x</Button>\n          </div>\n          <div className=\"row\">\n            <Button handleClick={this.addToInput}>1</Button>\n            <Button handleClick={this.addToInput}>2</Button>\n            <Button handleClick={this.addToInput}>3</Button>\n            <Button handleClick={this.add}>+</Button>\n          </div>\n          <div className=\"row\">\n            <Button handleClick={this.addDecimal}>.</Button>\n            <Button handleClick={this.addZeroToInput}>0</Button>\n            <Button handleClick={this.handleEqual}>=</Button>\n            <Button handleClick={this.subtract}>-</Button>\n          </div>\n          <div className=\"row\">\n            <ClearButton handleClear={this.clearInput}>clear</ClearButton>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}